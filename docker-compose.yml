version: "3.7"

services:
  fastapi-app:
    build:
      context: ./fastapi-app # Dockerfile이 위치한 디렉토리 경로
      dockerfile: Dockerfile # Dockerfile 이름 (생략 가능, 기본값은 'Dockerfile')
    ports:
      - "8003:8003"
    networks:
      - loadtest-net

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        REACT_APP_API_URL: "${REACT_APP_API_URL}"
    container_name: frontend-app
    ports:
      - "5001:5001"
    depends_on:
      - fastapi-app
    networks:
      - loadtest-net

  jmeter:
    build:
      context: ./jmeter
      dockerfile: Dockerfile
    container_name: jmeter
    volumes:
      - ./jmeter:/jmeter
    command:
      - jmeter
      - -n
      - -t
      - /jmeter/fastapi_test_plan.jmx
      - -l
      - /jmeter/results.jtl
      - -JBASE_URL=http://fastapi-app:8003
      - -Jjmeter.save.saveservice.output_format=csv
      - -e
      - -o
      - /jmeter/report
    networks:
      - loadtest-net

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true # 메모리 제한 환경에서 유용한 옵션
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - loadtest-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "7070:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - loadtest-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin # 기본 Grafana 로그인 비밀번호
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - loadtest-net

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "7100:9100"
    networks:
      - loadtest-net

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    command:
      - "--prometheus_endpoint=/metrics"
    restart: unless-stopped
    networks:
      - loadtest-net

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=12345678
      - DOCKER_INFLUXDB_INIT_ORG=admin
      - DOCKER_INFLUXDB_INIT_BUCKET=admin
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=12345678
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - loadtest-net

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/host:ro
    depends_on:
      - influxdb
    networks:
      - loadtest-net

networks:
  loadtest-net:
    driver: bridge

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  grafana-data:
  influxdb_data:
